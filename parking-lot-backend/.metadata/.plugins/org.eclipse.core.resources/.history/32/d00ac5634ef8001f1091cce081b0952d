package com.parkinglot.services;

import com.parkinglot.dtos.GateDTO;
import com.parkinglot.exceptions.GateNotFoundException;
import com.parkinglot.models.Gate;
import com.parkinglot.repositories.GateRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;

@Service
public class GateService {
    @Autowired
    private GateRepository gateRepository;

    public GateDTO getGateById(Long gateId) {
        Gate gate = gateRepository.findById(gateId)
                .orElseThrow(GateNotFoundException::new);
        return toDTO(gate);
    }

    public List<GateDTO> getAllGates() {
        List<Gate> gates = gateRepository.findAll();
        List<GateDTO> gateDTOs = new ArrayList<GateDTO>();
        for (Gate gate : gates) {
            gateDTOs.add(toDTO(gate));
        }
        return gateDTOs;
    }

    public GateDTO updateGate(GateDTO gateDTO) {
        Gate gate = gateRepository.findById(gateDTO.getId())
                .orElseThrow(GateNotFoundException::new);
        gate.setGateNumber(gateDTO.getGateNumber());
        gate.setGateType(gateDTO.getGateType());
        gate = gateRepository.save(gate);
        return toDTO(gate);
    }

    private GateDTO toDTO(Gate gate) {
        GateDTO dto = new GateDTO();
        dto.setId(gate.getId());
        dto.setGateNumber(gate.getGateNumber());
        dto.setGateType(gate.getGateType());
        if (gate.getCurrentOperator() != null) {
            dto.setOperatorName(gate.getCurrentOperator().getName());
        }
        return dto;
    }
}