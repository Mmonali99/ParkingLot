package com.parkinglot.controllers;

import com.parkinglot.dtos.AuthRequest;
import com.parkinglot.dtos.AuthResponse;
import com.parkinglot.dtos.UserDTO;
import com.parkinglot.services.AuthService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api/auth")
public class AuthController {
    private static final Logger logger = LoggerFactory.getLogger(AuthController.class);

    @Autowired
    private AuthService authService;

    @PostMapping("/login")
    public ResponseEntity<AuthResponse> authenticate(@RequestBody AuthRequest request) {
        logger.info("Login attempt for username: {}", request.getUsername());
        try {
            AuthResponse response = authService.authenticate(request);
            logger.info("Login successful for username: {}", request.getUsername());
            return ResponseEntity.ok(response);
        } catch (RuntimeException e) {
            logger.error("Login failed for username: {} - {}", request.getUsername(), e.getMessage());
            throw e; // Handled by GlobalExceptionHandler
        }
    }

    @PostMapping("/register")
    public ResponseEntity<AuthResponse> register(@RequestBody UserDTO userDTO) {
        logger.info("Register attempt for username: {}", userDTO.getUsername());
        try {
            AuthResponse response = authService.register(userDTO);
            logger.info("Registration successful for username: {}", userDTO.getUsername());
            return ResponseEntity.ok(response);
        } catch (RuntimeException e) {
            logger.error("Registration failed for username: {} - {}", userDTO.getUsername(), e.getMessage());
            throw e;
        }
    }
}