package com.parkinglot.services;

import com.parkinglot.dtos.ParkingFloorDTO;
import com.parkinglot.models.ParkingFloor;
import com.parkinglot.repositories.ParkingFloorRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.stream.Collectors;

@Service
public class ParkingFloorService {
    @Autowired
    private ParkingFloorRepository parkingFloorRepository;

    public List<ParkingFloorDTO> findAll() {
        return parkingFloorRepository.findAll().stream()
                .map(this::toDTO)
                .collect(Collectors.toList());
    }

    public ParkingFloorDTO findById(Long id) {
        ParkingFloor floor = parkingFloorRepository.findById(id)
                .orElseThrow(() -> new RuntimeException("Parking floor not found"));
        return toDTO(floor);
    }

    public ParkingFloorDTO save(ParkingFloorDTO floorDTO) {
        ParkingFloor floor = ParkingFloor.builder()
                .id(floorDTO.getId())
                .floorNumber(floorDTO.getFloorNumber())
                .build();
        floor = parkingFloorRepository.save(floor);
        return toDTO(floor);
    }

    private ParkingFloorDTO toDTO(ParkingFloor floor) {
        return ParkingFloorDTO.builder()
                .id(floor.getId())
                .floorNumber(floor.getFloorNumber())
                .parkingLotId(floor.getParkingLot() != null ? floor.getParkingLot().getId() : null)
                .parkingSpotIds(floor.getParkingSpotsList() != null ?
                        floor.getParkingSpotsList().stream().map(ParkingSpot::getId).collect(Collectors.toList()) : null)
                .build();
    }
}